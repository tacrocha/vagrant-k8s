---
- hosts: all
  become: true
  tasks:
  - name: Stop firewall
    systemd:
      name: firewalld
      state: stopped

  - name: Disable firewall
    systemd:
      name: firewalld
      enabled: false

  - include: docker-install.yml

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add Kubernetes repository
    yum_repository:
      name: kubernetes
      description: kubernetes
      baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      enabled: yes
      gpgcheck: yes
      repo_gpgcheck: yes
      gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

  - name: Disable SELinux
    selinux:
      state: disabled

  - name: Disable SELinux permanently
    lineinfile:
      path: /etc/selinux/config
      regexp: '^SELINUX='
      line: SELINUX=disabled

  - name: Install kubelet, kubeadm and kubectl 
    yum:
      name: "{{ packages }}"
      disable_excludes: kubernetes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl
  
  - name: Load br_netfilter module
    modprobe:
      name: br_netfilter
      state: present

  - name: Enable bridge-nf-call-iptables
    sysctl:
      name: "{{ item }}"
      value: '1'
      state: present
      reload: yes
    with_items:
      - net.bridge.bridge-nf-call-ip6tables
      - net.bridge.bridge-nf-call-iptables

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
      create: yes

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
      enabled: true

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="192.168.50.10" --apiserver-cert-extra-sans="192.168.50.10"  --node-name k8s-master --pod-network-cidr=192.168.0.0/16

  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
     - mkdir -p /home/vagrant/.kube
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
     - chown vagrant:vagrant /home/vagrant/.kube/config

  - name: Install calico pod network
    become: false
    command: kubectl apply -f https://docs.projectcalico.org/v3.8/manifests/calico.yaml

  - name: Generate join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Keep join command for nodes, in shared folder /vagrant
    become: false
    copy:
     content: "{{ join_command.stdout_lines[0] }}"
     dest: "/vagrant/kubernetes-setup/join-command"
